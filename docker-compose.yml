services:
  migrations:
    build: 
      context: .
      args:
        - SECRET_KEY=${SECRET_KEY:-default-insecure-key-1234}
    volumes:
      - persistent_data:/app/manager/data
    env_file: 
      - manager/.env
    command: sh -c "export PYTHONPATH=/app/manager && python manager/manage.py makemigrations core --noinput && python manager/manage.py migrate"
    restart: on-failure
    networks: 
      backend:

  web:
    build:
      context: .
      args:
        - SECRET_KEY=${SECRET_KEY:-default-insecure-key-1234}
    depends_on:
      migrations:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 300s
      timeout: 10s
      retries: 3
      start_period: 120s
    logging:
      options:
        max-size: "20m"
        max-file: "5"
    env_file:
      - manager/.env
    user: "appuser"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/manager
      - DJANGO_SETTINGS_MODULE=manager.settings
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - GUNICORN_WORKERS=2
      - GUNICORN_THREADS=2
      - SQLITE_TIMEOUT=60
      - SQLITE_MMAP_SIZE=268435456
      - SQLITE_JOURNAL_MODE=WAL
    volumes:
      - persistent_data:/app/manager/data:rw,cached
      - static_volume:/app/manager/staticfiles:ro
      - media_volume:/app/manager/media:rw,cached
      - backup_volume:/app/backups:rw
    command: >
      bash -c "
        python manager/manage.py migrate --noinput &&
        exec gunicorn --bind 0.0.0.0:8000 --workers 3 --threads 2 manager.wsgi:application
      "
  nginx:
    image: nginx:1.28
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/staticfiles
      - media_volume:/var/www/media
    depends_on:
      - web

networks:
  backend:
    driver: bridge

volumes:
  persistent_data:
  static_volume:
  media_volume:
  backup_volume:
